popular:
  nats:
    name: NATS
    url: https://nats.io
    summary: "NATS is an open-source, high-performance, lightweight cloud messaging system."
    tags:
      - go
      - .NET
      - node
      - nginx
      - java
      - ruby
      - python
      - scala
    links:
      - text: "NATS Documentation"
        url: http://nats.io/documentation/
      - text: "NATS: High Performance Cloud Native Messaging Written in Go"
        url: https://blog.gopheracademy.com/advent-2015/nats-high-performance-cloud-native-messaging-written-in-go/
      - text: "Using NATS instead of HTTP for inter service communication"
        url: http://www.diogogmt.com/2016/02/08/benchmarking-nats-and-rest/
      - text: "Benchmarking Message Queue Latency"
        url: http://bravenewgeek.com/benchmarking-message-queue-latency/
      - text: "Dissecting Message Queues"
        url: http://www.bravenewgeek.com/dissecting-message-queues/
      - text: "Introducing NATS"
        url: https://www.apcera.com/blog/introducing-nats/
      - text: "CloudFoundry Messaging System"
        url: http://docs.cloudfoundry.org/concepts/architecture/messaging-nats.html
      - text: "Why CloudFoundry uses NATS"
        url: http://www.quora.com/Why-does-CloudFoundry-use-NATS-a-specially-written-messaging-system-whereas-OpenStack-uses-AMQP
      - text: "NATS Node.js client on NPM"
        url: https://www.npmjs.com/package/nats
      - text: "Gnatsd Docker Image"
        url: https://registry.hub.docker.com/u/apcera/gnatsd/
  amazon_simple_queue_service:
    name: Amazon Simple Queue Service (SQS)
    url: http://aws.amazon.com/sqs/
    summary: "Amazon Simple Queue Service (Amazon SQS) is a messaging queue service that handles message or work flows between other components in a system."
    tags:
      - service
    links:
      - text: "Developer Guide: What is Amazon Simple Queue Service?"
        url: http://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/Welcome.html
      - text: "Developer Guide: Tutorials"
        url: http://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/sqs-tutorials.html
      - text: "API Reference"
        url: http://docs.aws.amazon.com/AWSSimpleQueueService/latest/APIReference/Welcome.html
      - text: "What are the advantages and disadvantages of Beanstalkd as a work queue? at Quora"
        url: http://www.quora.com/Beanstalk-work-queue/What-are-the-advantages-and-disadvantages-of-Beanstalkd-as-a-work-queue
      - text: "A super efficient AWS SQS thread based message processor for Ruby"
        url: https://github.com/phstc/shoryuken
      - text: "Zend Framework with SQS Adapter (PHP)"
        url: http://framework.zend.com/manual/1.12/ru/zend.service.amazon.sqs.html
  amazon_mq:
    name: Amazon MQ
    url: http://aws.amazon.com/amazon-mq/
    summary: "Amazon MQ is a managed message broker service for Apache ActiveMQ that makes it easy to set up and operate message brokers in the cloud."
    tags:
      - service
    links:
      - text: "What is Amazon MQ?"
        url: https://docs.aws.amazon.com/amazon-mq/latest/developer-guide/welcome.html    
      - text: "Introducing Amazon MQ"
        url: https://aws.amazon.com/about-aws/whats-new/2017/11/introducing-amazon-mq/
      - test: "Amazon MQ – Managed Message Broker Service for ActiveMQ" 
        url: https://aws.amazon.com/blogs/aws/amazon-mq-managed-message-broker-service-for-activemq/        
  apollo:
    name: Apollo
    url: http://activemq.apache.org/apollo/
    summary: "ActiveMQ's next generation of messaging."
    tags:
      - java
      - scala
      - amqp
    links:
      - text: "Apollo Next Generation Message Queuing Posts Some Impressive Benchmarks"
        url: http://www.infoq.com/news/2011/12/apollo-benchmarks
      - text: "Introduction to ActiveMQ Apollo"
        url: http://www.slideshare.net/dejanb/introduction-to-activemq-apollo-12992210
      - text: "Introducing Apache Apollo: Part I"
        url: http://www.christianposta.com/blog/?p=262
      - text: "Introducing Apache Apollo: Part II"
        url: http://www.christianposta.com/blog/?p=278
  qpid:
    name: Apache Qpid
    url: http://qpid.apache.org/
    summary: "Apache Qpid™ makes messaging tools that speak AMQP and support many languages and platforms (in C++, Python, Java JMS and .NET)"
    tags:
      - java
      - amqp
      - cpp
    links:
      - text: "Performance comparison between ZeroMQ, RabbitMQ and Apache Qpid"
        url: http://stackoverflow.com/questions/7921324/performance-comparison-between-zeromq-rabbitmq-and-apache-qpid
      - text: "RabbitMQ vs Apache ActiveMQ vs Apache qpid"
        url: http://bhavin.directi.com/rabbitmq-vs-apache-activemq-vs-apache-qpid/
      - text: "Programming in Apache Qpid"
        url: https://access.redhat.com/site/documentation/en-US/Red_Hat_Enterprise_MRG/1.3/html-single/Programming_in_Apache_Qpid/index.html
      - text: "QpidComponents.org is an open source development community dedicated to plugins and tools for enterprise-grade messaging in Apache Qpid"
        url: http://qpidcomponents.org/
  hornetq:
    name: HornetQ
    url: http://www.jboss.org/hornetq
    summary: "An open source project to build a multi-protocol, embeddable, very high performance, clustered, asynchronous messaging system (Donated to Apache ActiveMQ community)."
    tags:
      - java
      - amqp
      - jms
    links:
      - text: "Building a Distributed Messaging System at Groupon"
        url: https://engineering.groupon.com/2013/hornetq/building-a-distributed-messaging-system/
      - text: "Leveraging the HornetQ Message Broker at Shopzilla"
        url: http://www.slideshare.net/joshlong/better-living-through-messaging-leveraging-the-hornetq-message-broker-at-shopzilla
      - text: "Getting Started with HornetQ 2.3"
        url: http://java.dzone.com/articles/getting-started-hornetq-23
      - text: HornetQ Apache donation and Apache Artemis 1.0.0 release
        url: http://hornetq.blogspot.co.uk/2015/06/hornetq-apache-donation-and-apache.html
  resque:
    name: Resque
    url: https://github.com/resque/resque
    summary: "A rock-solid job queue, written in Ruby, backed by Redis."
    description:
      - "<a href=\"https://github.com/blog/542-introducing-resque\">Build at GitHub as an alternative to existing solutions</a>. Powers GitHub background jobs ever since."
      - "Heavily relying on Redis as backend"
      - "<a href=\"http://en.wikipedia.org/wiki/Fork_(operating_system)\">fork(2)</a> is used for spawning workers"
      - "Web UI for managing running jobs, active workers etc."
      - "Many plugins (like <a href=\"https://github.com/bvandenbos/resque-scheduler\">resque-scheduler</a>, <a href=\"https://github.com/lantins/resque-retry\">resque-retry</a>)"
      - "Big community"
    tags:
      - ruby
      - redis
    links:
      - text: "Introducing Resque at GitHub.com blog"
        url: https://github.com/blog/542-introducing-resque
      - text: "Queuing in Ruby with Redis and Resque at Heroku Center"
        url: https://devcenter.heroku.com/articles/queuing-ruby-resque
      - text: "Do YOU KNOW Resque"
        url: http://rubylearning.com/blog/2010/11/08/do-you-know-resque/
      - text: "How Queuing With Resque Works"
        url: http://girders.org/blog/2011/10/30/how-queuing-with-resque-works/
  disque:
    name: Disque
    url: https://github.com/antirez/disque
    summary: "An in-memory, distributed job queue."
    tags:
      - redis
      - disque
    links:
      - text: "dotScale 2015: Salvatore Sanfilippo introducing Disque"
        url: https://youtu.be/GRuFG7QVvCY
      - text: "Disque on Hacker News"
        url: https://news.ycombinator.com/item?id=9447185
      - text: "Adventures in message queues"
        url: http://antirez.com/news/88
  delayed_job:
    name: Delayed::Job
    url: https://github.com/collectiveidea/delayed_job
    summary: "Database based asynchronously priority queue system"
    tags:
      - ruby
      - mysql
    links:
      - text: "#171 Delayed Job - RailsCasts"
        url: http://railscasts.com/episodes/171-delayed-job
      - text: "Do It Later With Delayed Job."
        url: http://www.therailsway.com/2009/7/22/do-it-later-with-delayed-job/
      - text: "Delayed Jobs Callbacks and Hooks in Rails"
        url: http://www.salsify.com/blog/delayed-jobs-callbacks-and-hooks-in-rails
  beanstalkd:
    name: Beanstalkd
    url: http://kr.github.io/beanstalkd/
    summary: "Beanstalkd is a simple, fast work queue."
    description:
      - "Created to improve the response time for the <a href=\"http://apps.facebook.com/causes/\">Causes on Facebook</a> app."
      - "Written in C is <b>very fast</b> and <b>lightweight.</b>"
      - "It provides <a href=\"https://raw.github.com/kr/beanstalkd/master/doc/protocol.txt\">simple protocol</a>, inspired by <a href=\"http://memcached.org/\">memcached</a>"
      - "Queues have O(log n) time push and pop operations."
      - "<a href=\"https://github.com/kr/beanstalkd/wiki/FAQ#are-the-jobs-persistent-what-happens-if-the-power-goes-out\">It can be run in persistent mode, which will write all jobs to binlog.</a>"
      - "<a href=\"https://github.com/kr/beanstalkd/wiki/client-libraries\">Long list of client libraries for many languages</a>"
    tags:
      - c
    links:
      - text: "#243 Beanstalkd and Stalker - RailsCasts"
        url: http://railscasts.com/episodes/243-beanstalkd-and-stalker
      - text: "What are the advantages and disadvantages of Beanstalkd as a work queue? at Quora"
        url: http://www.quora.com/Beanstalk-work-queue/What-are-the-advantages-and-disadvantages-of-Beanstalkd-as-a-work-queue
      - text: "Beanstalk Messaging Queue"
        url: http://nubyonrails.com/articles/about-this-blog-beanstalk-messaging-queue
  kafka:
    name: Apache Kafka
    url: http://kafka.apache.org/
    summary: "Apache Kafka is publish-subscribe messaging rethought as a distributed commit log."
    tags:
      - scala
    links:
      - text: "Open-sourcing Kafka, LinkedIn’s distributed message queue"
        url: http://blog.linkedin.com/2011/01/11/open-source-linkedin-kafka/
      - text: "Kafka: The Great Logfile in the Sky by John Pignata (slides)"
        url: https://speakerdeck.com/jpignata/kafka-the-great-logfile-in-the-sky
      - text: "Apache Kafka - distributed publish-subscribe messaging system - Morten Kjetland (video)"
        url: https://vimeo.com/62298867
      - text: "Running a Multi-Broker Apache Kafka 0.8 Cluster on a Single Node"
        url: http://www.michael-noll.com/blog/2013/03/13/running-a-multi-broker-apache-kafka-cluster-on-a-single-node/
      - text: "Introduction and Overview of Apache Kafka, TriHUG July 23, 2013 [Presentation]"
        url: http://www.slideshare.net/mumrah/kafka-talk-tri-hug
      - text: "Intra-cluster Replication in Apache Kafka"
        url: "http://engineering.linkedin.com/kafka/intra-cluster-replication-apache-kafka"
  kue:
    name: Kue
    url: https://github.com/Automattic/kue
    summary: "A distributed priority job queue backed by redis, built for node.js"
    description:
      - Delayed jobs
      - Optional retries with backoff
      - Distribution of parallel work load
      - Job TTL
      - Job event and progress pubsub
      - Rich integrated UI
      - RESTful JSON API
      - Graceful shutdown
      - Powered by Redis
    tags:
      - node.js
      - priority
      - redis
    links:
      - text: "Implementing a Job Queue with Node.js"
        url: https://medium.com/node-js-tips-tricks/implementing-a-job-queue-with-node-js-ffcfbc824b01
      - text: "Introduction to Kue"
        url: http://www.screenr.com/oyNs
      - text: "API walkthrough to Kue"
        url: http://vimeo.com/26963384
  nsq:
    name: NSQ
    url: https://github.com/bitly/nsq
    summary: realtime distributed message processing at scale
    tags:
      - go
    links:
      - text: "NSQ: realtime distributed message processing at scale at bit.ly blog"
        url: http://word.bitly.com/post/33232969144/nsq
      - text: "NSQ - NYC Golang Meetup by Matt Reiferson (slides)"
        url: https://speakerdeck.com/snakes/nsq-nyc-golang-meetup
      - text: "Stream Processing: Philosophy, Concepts, and Technologies (slides)"
        url: https://speakerdeck.com/danielhfrank/stream-processing-philosophy-concepts-and-technologies
      - text: "Realtime Distributed Message Processing at Scale with NSQ (video)"
        url: http://www.youtube.com/watch?v=IkU8JsxdCAM
      - text: "Go Advent Day 22 - A Journey Into NSQ"
        url: http://blog.gopheracademy.com/day-22-a-journey-into-nsq
  zmq:
    name: ZeroMQ
    url: http://www.zeromq.org/
    summary: "The Intelligent Transport Layer"
    tags:
      - cpp
      - java
    links:
      - text: "ZeroMQ an introduction (Really - the best, must read article!)"
        url: http://nichol.as/zeromq-an-introduction
      - text: "ZeroMQ: Modern & Fast Networking Stack"
        url: http://www.igvita.com/2010/09/03/zeromq-modern-fast-networking-stack/
      - text: "PyCon 2011: Advanced Network Architectures With ZeroMQ (video)"
        url: http://blip.tv/pycon-us-videos-2009-2010-2011/pycon-2011-advanced-network-architectures-with-zeromq-4896861
      - text: "Ømq & Services @ Chartboost by Kenneth Ballenegger (slides)"
        url: https://speakerdeck.com/kballenegger/omq-and-services-at-chartboost
      - text: "Gearman and ZeroMQ, two different animals"
        url: https://speakerdeck.com/coudenysj/gearman-and-zeromq-two-different-animals
      - text: "The Architecture of Open Source Applications (Volume 2): ZeroMQ"
        url: http://www.aosabook.org/en/zeromq.html
      - text: "Network Autoconfiguration with Go and ØMQ"
        url: https://blog.kyleisom.net/2013/02/27/network-autoconfiguration-with-go-and-zeromq/
      - text: "Using ZeroMQ Security (part 1)"
        url: "http://hintjens.com/blog:48"
      - text: "Integrate ZeroMQ, AMQP, JMS WebSphere MQ and more in 2 lines of Python code with Zato"
        url: http://architects.dzone.com/articles/integrate-zeromq-amqp-jms-0
      - text: "ZeroMQ instead of HTTP, for internal services"
        url: http://augustl.com/blog/2013/zeromq_instead_of_http/
      - text: "gevent-zeromq - library wraps pyzmq to make it compatible with gevent (Python)"
        url: https://github.com/traviscline/gevent-zeromq
      - text: "Introducing ZuQ – A Simple ZeroMQ Queuing Daemon"
        url: http://devincharge.com/introducing-zuq/
      - text: "Lightweight RPC with ØMQ and Protocol Buffers"
        url: http://blogs.mulesoft.org/lightweight-rpc-with-%C3%B8mq-and-protocol-buffers/
      - text: "ZeroMQ via C#: Introduction"
        url: http://www.codeproject.com/Articles/488207/ZeroMQ-via-Csharp-Introduction
      - text: "JeroMQ: implemenation in java"
        url: https://github.com/zeromq/jeromq
  sidekiq:
    name: Sidekiq
    url: http://sidekiq.org/
    summary: "Simple, efficient background processing for Ruby."
    description:
      - Based on Redis
      - "Multithreaded, employs <a href=\"https://github.com/celluloid/celluloid\">Celluloid</a> under the hood"
      - "Web UI"
      - "Resque Compatibility"
      - "<a href=\"http://sidekiq.org/pro/\">Sidekiq Pro</a> - paid version ($750) with support and additional features (batches, notifications, reliability, metrics)"
      - Fast growing community
    tags:
      - ruby
      - redis
    links:
      - text: "Asynchronous Processing for Fun and Profit by Mike Perham"
        url: http://confreaks.com/videos/1290-rubyconf2012-asynchronous-processing-for-fun-and-profit
      - text: "#366 Sidekiq - RailsCasts"
        url: http://railscasts.com/episodes/366-sidekiq
      - text: "Sidekiq vs Resque, With MRI and JRuby"
        url: http://joshrendek.com/2012/11/sidekiq-vs-resque/
      - text: "Kicking ass with Sidekiq at StatusPage.io blog"
        url: http://blog.statuspage.io/kicking-ass-with-sidekiq
      - text: "Sidekiq at LinuxJournal"
        url: http://www.linuxjournal.com/content/sidekiq
  kestrel:
    name: Kestrel
    summary: "simple, distributed message queue system"
    url: https://twitter.github.io/kestrel/
    tags:
      - scala
    links:
      - text: "Scarling » Kestrel - Robey"
        url: http://robey.lag.net/2008/11/27/scarling-to-kestrel.html
      - text: "Kestrel in Production at Papertrail"
        url: http://blog.scoutapp.com/articles/2012/08/15/kestrel-monitoring
      - text: "Misleading Title About Queueing"
        url: http://www.railstips.org/blog/archives/2012/03/05/misleading-title-about-queueing/
      - text: "Don't Forget About the Kestrel Messaging Queue"
        url: http://java.dzone.com/articles/dont-forget-about-kestrel
  siberite:
    name: Siberite
    summary: "Simple, lightweight, leveldb backed message queue"
    url: http://siberite.org/
    description:
      - Darner rewritten in Go with additional features
      - Single topic can be consumed multiple times using durable cursors
      - Uses Kestrel (memcached) protocol
      - Keeps all messages out of process
      - Small amount of in-resident memory regardless of queue size
      - Two-phase reliable fetch
    tags:
      - go
    links:
      - text: "Source on GitHub"
        url: https://github.com/bogdanovich/siberite
  gearman:
    name: Gearman
    summary: Gearman Job Server
    url: http://gearman.org
    tags:
      - c
    links:
      - text: "What Powers Instagram: Hundreds of Instances, Dozens of Technologies"
        url: http://instagram-engineering.tumblr.com/post/13649370142/what-powers-instagram-hundreds-of-instances-dozens-of
      - text: "Gearman and ZeroMQ, two different animals"
        url: https://speakerdeck.com/coudenysj/gearman-and-zeromq-two-different-animals
      - text: "Gearman: A Job Server made for Scale (Presentation)"
        url: http://www.slideshare.net/mwillbanks/minne-bar-gearman
      - text: "Installing, configuring and running Gearman Job Server + PHP on Ubuntu"
        url: http://www.modernfidelity.co.uk/tech/installing-configuring-and-running-gearman-php-ubuntu
      - text: "Playing with Gearman"
        url: http://toys.lerdorf.com/archives/51-Playing-with-Gearman.html
      - text: "Notes on using Gearman with Python"
        url: http://www.saltycrane.com/blog/2010/04/notes-using-gearman-with-python/
  queue_classic:
    name: queue_classic
    summary: "Simple, efficient worker queue for Ruby & PostgreSQL."
    url: https://github.com/ryandotsmith/queue_classic
    tags:
      - ruby
      - postgres
    links:
      - text: "queue_classic by Ryan Smith (slides)"
        url: http://dl.dropboxusercontent.com/u/1579953/talks/queue_classic.pdf
      - text: "#344 Queue Classic - RailsCasts"
        url: http://railscasts.com/episodes/344-queue-classic
  rabbitmq:
    name: RabbitMQ
    summary: Robust messaging for applications
    url: http://www.rabbitmq.com/
    tags:
      - erlang
      - amqp
    links:
      - text: "RabbitMQ tutorials"
        url: http://www.rabbitmq.com/getstarted.html
      - text: "NYTimes Architecture: No Head, No Master, No Single Point Of Failure"
        url: http://highscalability.com/blog/2014/1/13/nytimes-architecture-no-head-no-master-no-single-point-of-fa.html
      - text: "Continuous Integration: Scaling to 74,000 Builds Per Day With Travis CI & RabbitMQ"
        url: http://blog.gopivotal.com/case-studies-2/continuous-integration-scaling-to-74000-builds-per-day-with-travis-ci-rabbitmq
      - text: "Smalltalk on RabbitMQ and Nanite"
        url: http://www.paperplanes.de/2009/7/8/smalltalk_on_rabbitmq_and_nanite.html
      - text: "22 Billion Served: Julien Genestoux of Superfeedr"
        url: http://blog.gopivotal.com/case-studies-2/22-billion-served-julien-genestoux-of-superfeedr
      - text: "Lift AMQP with RabbitMQ and Scala – Tutorial and Screencast"
        url: http://timperrett.com/2009/05/22/lift-amqp-with-rabbitmq-and-scala-tutorial-and-screencast/
      - text: "High powered messaging with RabbitMQ"
        url: http://www.slideshare.net/carrja99/high-powered-messaging-with
      - text: "RabbitMQ in Action: Distributed Messaging for Everyone (book)"
        url: http://www.amazon.com/RabbitMQ-Action-Distributed-Messaging-Everyone/dp/1935182978
      - text: "How Instagram Feeds Work: Celery and RabbitMQ"
        url: http://blogs.vmware.com/vfabric/2013/04/how-instagram-feeds-work-celery-and-rabbitmq.html
  celery:
    name: Celery
    summary: Distributed Task Queue
    url: http://www.celeryproject.org/
    tags:
      - python
    links:
      - text: "Using Celery for queuing requests"
        url: https://blog.serverdensity.com/using-celery-for-queuing-requests/
      - text: "An Introduction to Celery by Gilang Chandrasa (slides)"
        url: https://speakerdeck.com/gchandrasa/an-introduction-to-celery
      - text: "Celery - Best Practices"
        url: https://denibertovic.com/posts/celery-best-practices/
      - text: "How Instagram Feeds Work: Celery and RabbitMQ"
        url: http://blogs.vmware.com/vfabric/2013/04/how-instagram-feeds-work-celery-and-rabbitmq.html
  rq:
    name: RQ
    summary: RQ (Redis Queue) is a simple Python library for queueing jobs and processing them in the background with workers
    url: http://python-rq.org/
    tags:
      - python
      - redis
    links:
      - text: "Why and how Pricing Assistant migrated from Celery to RQ - Paris.py #2"
        url: http://www.slideshare.net/sylvinus/why-and-how-pricing-assistant-migrated-from-celery-to-rq-parispy-2
  darner:
    name: Darner
    summary: "simple, lightweight message queue"
    url: https://github.com/wavii/darner
    tags:
      - cpp
    links:
      - text: "Darner, Wavii’s new queue server: 10x faster, 10x smaller"
        url: http://wavii.wordpress.com/2012/08/13/darner-waviis-new-queue-server-10x-faster-10x-smaller/
      - text: "How do Darner and RabbitMQ compare? at Quora"
        url: http://www.quora.com/Message-Queueing/How-do-Darner-and-RabbitMQ-compare
  ironmq:
    name: IronMQ
    summary: "IronMQ is an easy-to-use highly available message queuing service. It is available as a cloud service on Amazon and Rackspace as well as on-premise with Iron.io's enterprise offering. Features include a nice dashboard to manage queues, easy to create webhooks, unicast and multicast Push Queues, autoscaling alerts for worker processes, and error queues."
    url: http://www.iron.io/mq
    tags:
      - go
      - service
    links:
      - text: "Push Queues for Reliable Messaging"
        url: http://blog.iron.io/2013/01/ironmq-push-queues-reliable-message.html
      - text: "Using IronMQ for Delayed Processing and Increasing Scale"
        url: http://developer.rackspace.com/blog/using-ironmq.html
      - text: "Message Queues: Comparing Beanstalkd, IronMQ and Amazon SQS"
        url: http://www.sitepoint.com/message-queues-comparing-beanstalkd-ironmq-amazon-sqs/
      - text: "Using IronMQ as a Celery Broker"
        url: http://celery.readthedocs.org/en/latest/getting-started/brokers/ironmq.html
      - text: "Laravel 4 + IronMQ Push Queues"
        url: http://blog.iron.io/2013/05/laravel-4-ironmq-push-queues-insane.html
      - text: "Using IronMQ as a DelayedJob Broker"
        url: http://blog.iron.io/2012/08/the-best-backend-for-delayed-job-ironmq.html
  restmq:
    name: RestMQ
    summary: "RestMQ is a message queue which uses HTTP as transport, JSON to format a minimalist protocol and is organized as REST resources. It stands on the shoulder of giants, built over Python, Twisted, Cyclone (a Tornado implementation over twisted) and Redis."
    url: http://restmq.com/
    tags:
      - python
      - redis
    links:
      - text: "RestMQ - HTTP/Redis based Message Queue (slides)"
        url: http://www.slideshare.net/gleicon/restmq-httpredis-based-message-queue
  activemq:
    name: ActiveMQ
    summary: "Apache ActiveMQ ™ is the most popular and powerful open source messaging and Integration Patterns server."
    url: "http://activemq.apache.org/"
    tags:
      - java
    links:
      - text: "Introduction to Messaging With Apache ActiveMQ - Bruce Snyder (video)"
        url: https://vimeo.com/12654513
  zaqar:
    name: Zaqar (ex Marconi)
    summary: "Zaqar is a queuing and notification service made by and for OpenStack, but not only for it"
    url: https://wiki.openstack.org/wiki/Zaqar
    tags:
      - openstack
      - python
      - mongodb
      - sqlite
      - durable
    links:
      - text: "OpenStack Summit 2013 Project Overview: Marconi Queueing and Notification Service"
        url: http://www.youtube.com/watch?v=henTTZWtt2k
      - text: "Marconi Queuing and Notification service for OpenStack"
        url: http://www.youtube.com/watch?v=iNOd7-_TdDo
  nanomsg:
    name: nanomsg
    summary: "nanomsg is a socket library that provides several common communication patterns"
    url: http://nanomsg.org/
    tags:
      - c
      - zeromq
    links:
      - text: "Getting Started with 'nanomsg'"
        url: http://tim.dysinger.net/posts/2013-09-16-getting-started-with-nanomsg.html
      - text: "Nanomsg: ZeroMQ done right"
        url: http://hguemar.fedorapeople.org/slides/nanomsg/presentation.html
  mappedbus:
    name: Mappedbus
    summary: "A Java based high throughput, low latency message bus, using either a memory mapped file or shared memory as transport."
    url: http://mappedbus.io/
    tags:
      - java
      - high-throughput
      - low-latency
      - message-passing
      - ipc
    links:
      - text: "Source on GitHub"
        url: http://github.com/caplogic/mappedbus
  qdb:
    name: QDB
    summary: "QDB is a Persistent Message Queue With Replay support"
    url: http://qdb.io/
    tags:
      - java
      - persistent
      - replay
      - backup
    links:
      - text: "Source on Github"
        url: https://github.com/qdb-io/qdb-server
      - text: "ANN QDB 0.4.4 Released with backup for RabbitMQ queues"
        url: http://rabbitmq.1065348.n5.nabble.com/ANN-QDB-0-4-4-Released-with-backup-for-RabbitMQ-queues-td28574.html
  huey:
    name: huey
    summary: "a little task queue"
    url: https://huey.readthedocs.org/en/latest/
    tags:
      - python
      - redis
      - django
    links:
      - text: "Source on GitHub"
        url: https://github.com/coleifer/huey
      - text: "Huey, a lightweight task queue for python"
        url: http://charlesleifer.com/blog/huey-lightweight-task-queue-python/
  message-bus:
    name: Message Bus
    summary: "Message bus is a distributed messaging platform built with HornetQ, used extensively at Groupon."
    url: https://github.com/groupon/Message-Bus
    tags:
      - hornetq
      - java
      - ruby
    links:
      - text: "Building a Distributed Messaging System"
        url: https://engineering.groupon.com/2013/hornetq/building-a-distributed-messaging-system/
      - text: "Reliable Distributed Messaging with HornetQ"
        url: http://www.jboss.org/dms/judcon/2013unitedstates/presentations/judcon2013_day3track1session5.pdf
